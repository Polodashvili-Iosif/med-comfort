name: Django-app workflow

on: [push]

jobs:
  tests:
    name: Тестирование
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Установка Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Установка зависимостей
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r med_comfort/requirements.txt
    - name: Создание .env файла
      run: |
        touch .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo HOST=${{ secrets.HOST }} >> .env
        echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
    - name: Тест с flake8
      run: |
        python -m flake8
    - name: Django тесты
      run: |
        python med_comfort/manage.py test

  build_and_push_to_docker_hub:
    name: Отправка Docker image в Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Проверка репозитория
        uses: actions/checkout@v2
      - name: Настройка Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Вход в Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Отправка в Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/med_comfort:latest
          file: med_comfort/Dockerfile
  deploy:
    name: Развёртывание
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Выполнение удаленных команд ssh для развертывания
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm web
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/med_comfort
            touch .env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
            echo HOST=${{ secrets.HOST }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            sudo docker image prune --all --force